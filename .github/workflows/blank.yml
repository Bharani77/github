name: Chrome Browser Web Interface
on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Duration to keep tunnel alive (minutes)'
        required: true
        default: '60'
        type: string
      password:
        description: 'VNC Password'
        required: true
        type: string

jobs:
  chrome-web:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl nodejs npm
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable tigervnc-standalone-server fluxbox xterm
          echo "✅ Environment setup complete"

      - name: Configure VNC
        run: |
          mkdir -p ~/.vnc
          echo "${{ github.event.inputs.password }}" | vncpasswd -f > ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd
          echo "#!/bin/bash" > ~/.vnc/xstartup
          echo "fluxbox &" >> ~/.vnc/xstartup
          echo "sleep 3" >> ~/.vnc/xstartup
          echo "google-chrome --no-sandbox --disable-dev-shm-usage --disable-gpu --start-maximized --no-first-run \"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo\" &" >> ~/.vnc/xstartup
          chmod +x ~/.vnc/xstartup
          echo "✅ VNC configured"

      - name: Start VNC server
        run: |
          vncserver :1 -geometry 1920x1080 -depth 24
          sleep 10
          echo "✅ VNC server started"

      - name: Setup web interface
        run: |
          pip3 install websockify
          wget https://github.com/novnc/noVNC/archive/refs/tags/v1.4.0.tar.gz
          tar xf v1.4.0.tar.gz
          mv noVNC-1.4.0 novnc
          echo "✅ Web interface ready"

      - name: Start web server
        run: |
          cd novnc
          websockify --web . 6080 localhost:5901 &
          sleep 5
          echo "✅ Web server running on port 6080"

      - name: Create tunnel
        run: |
          npm install -g localtunnel
          nohup lt --port 6080 > tunnel.log 2>&1 &
          sleep 15
          TUNNEL_URL=$(grep -o 'https://.*\.loca\.lt' tunnel.log | head -1)
          if [ -n "$TUNNEL_URL" ]; then
            echo "🎉 SUCCESS! Chrome Browser is Ready!"
            echo "================================================"
            echo "🌐 URL: $TUNNEL_URL"
            echo "🔑 Password: ${{ github.event.inputs.password }}"
            echo "⏰ Duration: ${{ github.event.inputs.duration }} minutes"
            echo "================================================"
            echo ""
            echo "📋 How to Use:"
            echo "1. Click the URL above"
            echo "2. Click 'Connect' button"
            echo "3. Enter your password"
            echo "4. Chrome will appear with Tampermonkey page"
            echo "5. Click 'Add to Chrome' to install Tampermonkey"
            echo ""
            echo "✨ You'll see the actual Chrome browser interface!"
            echo "## 🚀 Chrome Browser Ready" >> $GITHUB_STEP_SUMMARY
            echo "**URL:** $TUNNEL_URL" >> $GITHUB_STEP_SUMMARY
            echo "**Password:** ${{ github.event.inputs.password }}" >> $GITHUB_STEP_SUMMARY
            echo "**Usage:** Click URL → Connect → Enter Password → Use Chrome" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Failed to create tunnel"
            cat tunnel.log
            exit 1
          fi

      - name: Keep alive
        run: |
          echo "🕐 Keeping session alive for ${{ github.event.inputs.duration }} minutes..."
          sleep $((${{ github.event.inputs.duration }} * 60))
          echo "⏰ Session ended"

      - name: Cleanup
        if: always()
        run: |
          pkill -f localtunnel || true
          pkill -f websockify || true
          vncserver -kill :1 || true
          echo "✅ Cleanup complete"
